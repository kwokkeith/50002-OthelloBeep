/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module buzzer_30 (
    input clk,
    input rst,
    input trigger_sig,
    output reg out
  );
  
  
  
  wire [1-1:0] M_pwm_system_pulse;
  reg [8-1:0] M_pwm_system_value;
  reg [1-1:0] M_pwm_system_update;
  pwm_31 pwm_system (
    .clk(clk),
    .rst(rst),
    .value(M_pwm_system_value),
    .update(M_pwm_system_update),
    .pulse(M_pwm_system_pulse)
  );
  
  reg [26:0] M_hold_ctr_d, M_hold_ctr_q = 1'h0;
  localparam IDLE_state = 1'd0;
  localparam SEND_SIG_state = 1'd1;
  
  reg M_state_d, M_state_q = IDLE_state;
  
  always @* begin
    M_state_d = M_state_q;
    M_hold_ctr_d = M_hold_ctr_q;
    
    out = 1'h0;
    M_pwm_system_value = 7'h64;
    M_pwm_system_update = 1'h0;
    if (M_state_q == IDLE_state) begin
      if (trigger_sig == 1'h1) begin
        M_state_d = SEND_SIG_state;
        M_hold_ctr_d = 1'h0;
        M_pwm_system_update = 1'h0;
      end
    end
    if (M_state_q == SEND_SIG_state) begin
      M_pwm_system_update = 1'h1;
      out = M_pwm_system_pulse;
      M_hold_ctr_d = M_hold_ctr_q + 1'h1;
      if (M_hold_ctr_q >= 27'h5f5e100) begin
        M_state_d = IDLE_state;
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_hold_ctr_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_hold_ctr_q <= M_hold_ctr_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
